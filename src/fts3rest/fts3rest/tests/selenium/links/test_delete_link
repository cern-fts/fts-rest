#!/usr/bin/python
import unittest, time
from selenium import webdriver
from pyvirtualdisplay import Display

class FTS3develSeTab(unittest.TestCase):

    def setUp(self):
        self.display = Display(visible=0, size=(800, 600))
        self.display.start()
        profile = webdriver.FirefoxProfile('/home/jenkins/.mozilla/firefox/browser/default/jenkins')
        self.driver = webdriver.Firefox(profile)

    def test_delete_link(self):
        """
        Test delete button for link configuration
        """
        driver = self.driver
        driver.get("https://fts3-devel.cern.ch:8446/config/links")

        #SET UP
        setup_list = [
            ("delete0", "delete://delete0.delete", "delete://delete0.delete", "0", "20","130", "2", "1"),
            ("delete1", "delete://delete1.delete", "delete://delete1.delete", "0", "2","2", "0", "0")
        ]

        for element in setup_list:
            count = 0
            symbname_field = driver.find_element_by_xpath('//input[@name="symbolicname"]')
            symbname_field.clear()
            symbname_field.send_keys(element[0])

            source_field = driver.find_element_by_id('link-add-field-source')
            source_field.clear()
            source_field.send_keys(element[1])

            destination_field = driver.find_element_by_id('link-add-field-destination')
            destination_field.clear()
            destination_field.send_keys(element[2])

            streams_field = driver.find_element_by_xpath('//input[@name="nostreams"]')
            streams_field.clear()
            streams_field.send_keys(element[3])

            minact_field = driver.find_element_by_xpath('//input[@name="min_active"]')
            minact_field.clear()
            minact_field.send_keys(element[4])

            maxact_field = driver.find_element_by_xpath('//input[@name="max_active"]')
            maxact_field.clear()
            maxact_field.send_keys(element[5])

            optimizer_field = driver.find_element_by_xpath('//input[@name="optimizer_mode"]')
            optimizer_field.clear()
            optimizer_field.send_keys(element[6])

            tcp_field = driver.find_element_by_xpath('//input[@name="tcp_buffer_size"]')
            tcp_field.clear()
            tcp_field.send_keys(element[7])

            button_add = driver.find_element_by_id('button_add_link')
            button_add.click()
            time.sleep(1)

        driver.refresh()

        #CHECK IF EVERYTHING WAS SAVED
        check0_list = []
        check1_list = []

        count = 0
        page_list = driver.find_elements_by_id('symname')
        for elem in page_list:
            check0_list.append(elem.text)
        count = count + 1

        count = 0
        for element in setup_list:
            check1_list.append(element[0])
        count = count + 1

        if not set(check1_list) < set(check0_list):
            return self.assertFalse("SETUP: Problem with adding link configuration", set(check1_list) - set(check0_list))


        # TEST test_delete_link
        input_list = [
            ("delete0", "delete://delete0.delete", "delete://delete0.delete", "0", "20","130", "2", "1"),
            ("delete1", "delete://delete1.delete", "delete://delete1.delete", "0", "2","2", "0", "0"),
            ("*", "*", "*", "0", "20","130", "2", "1"),
            ("syname0", "0test://test.test", "test://test1.test", "0", "2","2", "0", "0"),
            ("syname1", "1test://test.test", "test://test2.test", "10", "15", "25", "5", "30"),
            ("syname2", "2test://test.test", "test://test3.test", "30", "40", "190", "3", "230"),
            ("syname3", "3test://test.test", "test://test4.test", "99", "8", "10", "1", "20"),
            ("syname4", "4test://test.test", "test://test5.test", "67", "780", "8990", "2", "80"),
            (" ", "bug://bug.bug", "bug://bug.bug", "0", "2","2", "0", "0"),
            ("bug1", " ", "bug://bug.bug", "0", "2","2", "0", "0"),
            ("bug2", "bug://bug.bug", " ", "0", "2","2", "0", "0"),
            ("bug3", "", "bug://bug.bug", "0", "2","2", "0", "0"),
            ("bug4", "bug://bug.bug", "", "0", "2","2", "0", "0"),
            ("bug5", "123", "bug://bug.bug", "0", "2","2", "0", "0"),
            ("bug6", "-123", "bug://bug.bug", "0", "2","2", "0", "0"),
            ("bug7", "3.14", "bug://bug.bug", "0", "2","2", "0", "0"),
            ("bug8", "$#&", "bug://bug.bug", "0", "2","2", "0", "0"),
            ("bug9", "word", "bug://bug.bug", "0", "2","2", "0", "0"),
            ("bug10", "bug10://bug", "bug://bug.bug", "0", "2","2", "0", "0"),
            ("bug11", "bug11://bug.bug", "123", "0", "2","2", "0", "0"),
            ("bug12", "bug12://bug.bug", "-123", "0", "2","2", "0", "0"),
            ("bug13", "bug13://bug.bug", "3.14", "0", "2","2", "0", "0"),
            ("bug14", "bug14://bug.bug", "$#%", "0", "2","2", "0", "0"),
            ("bug15", "bug15://bug.bug", "word", "0", "2","2", "0", "0"),
            ("bug16", "bug16://bug.bug", "bug://bug", "0", "2","2", "0", "0"),
            ("bug17", "bug17://bug.bug ", "bug://bug.bug", "0", "2","2", "0", "0"),
            ("bug18", "bug18://bug.bug", "bug://bug.bug ", "0", "2","2", "0", "0"),
            ("bug19", "bug19://bug.bug", "bug://bug.bug", " ", "2","2", "0", "0"),
            ("bug20", "bug20://bug.bug", "bug://bug.bug", "0", " ","2", "0", "0"),
            ("bug21", "bug21://bug.bug", "bug://bug.bug", "0", "2"," ", "0", "0"),
            ("bug22", "bug22://bug.bug", "bug://bug.bug", "0", "2","2", " ", "0"),
            ("bug23", "bug23://bug.bug", "bug://bug.bug", "0", "2","2", "0", " "),
            ("bug24", "bug23://bug.bug", "bug://bug.bug", "101", "2","2", "0", "0"),
            ("bug25", "bug23://bug.bug", "bug://bug.bug", "-10", "2","2", "0", "0"),
            ("bug26", "bug23://bug.bug", "bug://bug.bug", "0", "0","2", "0", "0"),
            ("bug27", "bug23://bug.bug", "bug://bug.bug", "0", "1000000","2", "0", "0"),
            ("bug28", "bug23://bug.bug", "bug://bug.bug", "0", "2","0", "0", "0"),
            ("bug29", "bug23://bug.bug", "bug://bug.bug", "0", "2","1000000", "0", "0"),
            ("bug30", "bug23://bug.bug", "bug://bug.bug", "0", "2","2", "-1", "0"),
            ("bug31", "bug23://bug.bug", "bug://bug.bug", "0", "2","2", "6", "0"),
            ("bug32", "bug23://bug.bug", "bug://bug.bug", "0", "2","2", "0", "-10"),
            ("bug33", "bug23://bug.bug", "bug://bug.bug", "0", "2","2", "0", "1000000"),
            ("bug34", "bug23://bug.bug", "bug://bug.bug", "0", "100","50", "0", "0")
        ]

        #FIND ELEMENTS FROM THE INPUT_LIST THAT ARE ON THE PAGE
        check2_list = []
        check3_list = []

        count = 0
        page_list = driver.find_elements_by_id('symname')
        for elem in page_list:
            check2_list.append(elem.text)
        count = count + 1

        count = 0
        for element in input_list:
            check3_list.append(element[0])
        count = count + 1

        output_list = set(check2_list)&set(check3_list)


        #DELETE 
        for element in output_list:
            btn = '//button[@name="lndel_' +element + '"][@class="btn btn-link"]'
            button_delete = driver.find_element_by_xpath(btn)
            button_delete.click()

        driver.refresh()

        #CHECK IF IT WAS DELETED
        check4_list = []
        check5_list = []

        count = 0
        page_list = driver.find_elements_by_id('symname')
        for elem in page_list:
            check4_list.append(elem.text)
        count = count + 1

        count = 0
        for element in input_list:
            check5_list.append(element[0])
        count = count + 1

        not_deleted = set(check4_list)&set(check5_list)
        if not_deleted:
            return self.assertFalse("TEST: The link configuration wasn't deleted", not_deleted)


    def tearDown(self):
        self.driver.close()
        self.display.stop()

if __name__ == "__main__":
    unittest.main()

