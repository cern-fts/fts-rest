#!/usr/bin/python
import unittest, time
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from pyvirtualdisplay import Display

class FTS3develSeTab(unittest.TestCase):

    def setUp(self):
        self.display = Display(visible=0, size=(800, 600))
        self.display.start()
        profile = webdriver.FirefoxProfile('/home/jenkins/.mozilla/firefox/browser/default/jenkins')
        self.driver = webdriver.Firefox(profile)

    def test_save_good_share(self):
        """
        Test change share configuration (share field) and save 
        """
        driver = self.driver
        driver.get("https://fts3-devel.cern.ch:8446/config/links")

        #SET UP data for the test

        setup_list = [
            ("test14", "test14://test.test", "test://test0.test", "0", "2","2", "0", "0"),
            ("test15", "test15://test.test", "test://test1.test", "10", "15", "25", "5", "30"),
            ("test16", "test16://test.test", "test://test2.test", "1", "150", "250", "5", "70"), 
            ("test17", "test17://test.test", "test://test3.test", "0", "2","2", "0", "0"),
            ("test18", "test18://test.test", "test://test4.test", "10", "15", "25", "5", "30")
        ]

        for element in setup_list:
            count = 0
            symbname_field = driver.find_element_by_xpath('//input[@name="symbolicname"]')
            symbname_field.clear()
            symbname_field.send_keys(element[0])

            source_field = driver.find_element_by_id('link-add-field-source')
            source_field.clear()
            source_field.send_keys(element[1])

            destination_field = driver.find_element_by_id('link-add-field-destination')
            destination_field.clear()
            destination_field.send_keys(element[2])

            streams_field = driver.find_element_by_xpath('//input[@name="nostreams"]')
            streams_field.clear()
            streams_field.send_keys(element[3])

            minact_field = driver.find_element_by_xpath('//input[@name="min_active"]')
            minact_field.clear()
            minact_field.send_keys(element[4])

            maxact_field = driver.find_element_by_xpath('//input[@name="max_active"]')
            maxact_field.clear()
            maxact_field.send_keys(element[5])

            optimizer_field = driver.find_element_by_xpath('//input[@name="optimizer_mode"]')
            optimizer_field.clear()
            optimizer_field.send_keys(element[6])

            tcp_field = driver.find_element_by_xpath('//input[@name="tcp_buffer_size"]')
            tcp_field.clear()
            tcp_field.send_keys(element[7])

            button_add = driver.find_element_by_id('button_add_link')
            button_add.click()
            time.sleep(1)

        #CHECK IF EVERYTHING WAS SAVED
        check0_list = []
        check1_list = []

        count = 0
        page_list = driver.find_elements_by_id('symname')
        for elem in page_list:
            check0_list.append(elem.text)
        count = count + 1

        count = 0
        for element in setup_list:
            check1_list.append(element[0])
        count = count + 1

        if not set(check1_list) < set(check0_list):
            return self.assertFalse("SETUP: Problem with adding link configuration", set(check1_list) - set(check0_list))

        # SET UP add elements to share configuration
        setup2_list = [
            ("test14://test.test", "test://test0.test", "share_0", "2"),
            ("test15://test.test", "test://test1.test", "share_1", "58"),
            ("test16://test.test", "test://test2.test", "share_2", "100"),
            ("test17://test.test", "test://test3.test", "share_3", "70"),
            ("test18://test.test", "test://test4.test", "share_4", "30")
        ]

        for element in setup2_list:
            count = 0
            source_field = driver.find_element_by_id('share-add-field-source')
            source_field.clear()
            source_field.click()
            source_field.send_keys(element[0])

            destination_field = driver.find_element_by_id('share-add-field-destination')
            destination_field.clear()
            destination_field.send_keys(element[1])

            vo_field = driver.find_element_by_id('share-add-field-vo')
            vo_field.clear()
            vo_field.send_keys(element[2])

            share_field = driver.find_element_by_xpath('//input[@placeholder="Share"]')
            share_field.send_keys(Keys.CONTROL + 'a')
            share_field.send_keys(Keys.BACKSPACE)
            share_field.send_keys(element[3])

            button_add = driver.find_element_by_id('button_share_link')
            button_add.click()
            time.sleep(1)

        #CHECK IF IT WAS SAVED
        check2_list = []
        check3_list = []

        count = 0
        page_list = driver.find_elements_by_id('share_name')
        for elem in page_list:
            check2_list.append(elem.text)
        count = count + 1

        count = 0
        for element in setup2_list:
            check3_list.append(element[0])
        count = count + 1

        if not set(check3_list) < set(check2_list):
            return self.assertFalse("SETUP: The share configuration wasn't saved", set(check3_list) - set(check2_list))


        # TEST test_save_good_share

        input_list = [
            ("test14://test.test", "test://test0.test", "share_0", "33"),
            ("test15://test.test", "test://test1.test", "share_1", "88"),
            ("test16://test.test", "test://test2.test", "share_2", "66"),
            ("test17://test.test", "test://test3.test", "share_3", "11"),
            ("test18://test.test", "test://test4.test", "share_4", "22")
        ]

        #FIND ELEMENTS FROM THE INPUT_LIST THAT ARE ON THE PAGE
        output_list = []
        share_list = driver.find_elements_by_id('share_name')
        vo_list = driver.find_elements_by_id('vo_name')
        for element in input_list:
            count = 0
            for sh in share_list:
                if sh.text == element[0]:
                    output_list.append(element)
                count = count + 1

        #SAVE 
        for element in output_list:
            count = 0
            savebtn_list = driver.find_elements_by_id('button_save_share')
            share_field = driver.find_elements_by_xpath('//input[@name="share-saved"]')
            time.sleep(1)
            for sh,vo in zip(share_list, vo_list):
                if sh.text == element[0] and vo.text==element[2]:    
                    share_field[count].click()
                    share_field[count].send_keys(Keys.CONTROL + 'a')
                    share_field[count].send_keys(Keys.BACKSPACE)
                    share_field[count].send_keys(element[3])

                    savebtn_list[count].click()
                    time.sleep(1)
                count = count + 1

        #CHECK IF IT WAS SAVED
        check_list3 = []
        sh_list = driver.find_elements_by_xpath('//input[@name="share-saved"]')
        for element in input_list:
            count = 0
            for sh,vo,s in zip(share_list, vo_list, sh_list):
                if sh.text == element[0] and vo.text==element[2] and s.get_attribute('value')==element[3]:
                    check_list3.append(element)
                count = count + 1

        not_saved3 = set(check_list3)^set(input_list)
        if not_saved3:
            return self.assertFalse("TEST: The changes were NOT saved", not_saved3)


    def tearDown(self):
        self.driver.close()
        self.display.stop()

if __name__ == "__main__":
    unittest.main()

